{"DSU": {
  "prefix": "Disjoin-Union-Set",
  "body": [
    "class DSU {",
    "    int *parent, *rank, n;",
    "    public:",
    "    DSU(int sz)",
    "    {",
    "        rank = new int[n];",
    "        parent = new int[n];",
    "        this->n = sz;",
    "        makeset();",
    "    }",
    "    void makeset()",
    "    {",
    "        rep(i, 1, n + 1)",
    "        {",
    "            parent[i] = i;",
    "        }",
    "    }",
    "    ll get(ll x)",
    "    {",
    "        return parent[x] = (parent[x] == x) ? x : get(parent[x]);",
    "    }",
    "    void uni(ll x, ll y)",
    "    {",
    "        x = get(x);",
    "        y = get(y);",
    "        if (rank[x] == rank[y]) { rank[x]++; }",
    "        if (rank[x] > rank[y]) { parent[y] = x; }",
    "        else { parent[x] = y; }",
    "    }",
    "};"
  ],
  "description": "DSU"
}}
