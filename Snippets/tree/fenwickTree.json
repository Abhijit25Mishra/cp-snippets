{
"Fenwick Tree": {
		"prefix": "fenwick-tree",
		"body": [
			"template <class T = long long>",
			"class FenwickTree",
			"{",
			"private:",
			"\tvector<T> tree;",
			"\tconst T identity = 0;",
			"\tT merge (const T x, const T y)",
			"\t{",
			"\t\treturn x + y;",
			"\t}",
			"\tT merge_inverse (const T x, const T y)",
			"\t{",
			"\t\treturn x - y;",
			"\t}",
			"\t// index is 0-based",
			"\tT query_0_to_index (int index)",
			"\t{",
			"\t\tT ans = identity;",
			"\t\tindex++;",
			"\t\tfor(; index > 0; index -= index & -index)",
			"\t\t\tans = merge(ans, tree[index]);",
			"\t\treturn ans;",
			"\t}",
			"",
			"public:",
			"\tFenwickTree (const int size)",
			"\t{",
			"\t\ttree.resize(size + 1, identity);",
			"\t}",
			"\t// index is 0-based",
			"\tvoid update (int index, const T delta)",
			"\t{",
			"\t\tindex++;",
			"\t\tfor(; index < tree.size() ; index += index & -index)",
			"\t\t\ttree[index] = merge(tree[index], delta);",
			"\t}",
			"\t// index is 0-based",
			"\tT query (const int l, const int r)",
			"\t{",
			"\t\treturn merge_inverse(query_0_to_index(r), query_0_to_index(l-1));",
			"\t}",
			"};"
		],
		"description": "My Fenwick Tree class"
	}
}
